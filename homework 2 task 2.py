"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def counting_number(number, even_count=0, uneven_count=0):
    last_num = number % 10
    even_count += 1 if last_num % 2 == 0 else 0
    uneven_count += 1 if last_num % 2 == 1 else 0
    if last_num == number:
        return f"Количество четных и нечетных цифр в числе равно: {even_count, uneven_count}"
    return counting_number(number // 10, even_count, uneven_count)


print(counting_number(123))